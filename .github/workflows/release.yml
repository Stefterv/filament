name: Release

# This Workflow can be triggered two ways:
# 1. A GitHub release is created (using the GitHub web UI). This triggers all of the platforms to
# build and upload assets.
# 2. A workflow_dispatch event is triggered from the GitHub web UI. This triggers a build for only
# the platform specified in the dispatch event.

env:
  RELEASE_TAG: ${{ github.event.inputs.release_tag }}

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform to build (desktop, web, android, ios, windows)"
        required: true
        default: "desktop"
      release_tag:
        description: "Release tag to build (e.g., v1.13.0)"
        required: true
        default: "v1.13.0"
  release:
    types: [created]

jobs:
  build-desktop:
    name: build-desktop
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release' || github.event.inputs.platform == 'desktop'

    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04]

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
      - uses: actions/checkout@v2.0.0
        with:
          ref: ${{ steps.git_ref.outputs.ref }}
      - name: Run build script
        run: |
          WORKFLOW_OS=`echo \`uname\` | sed "s/Darwin/mac/" | tr [:upper:] [:lower:]`
          cd build/$WORKFLOW_OS && printf "y" | ./build.sh release
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "out/*.tgz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.git_ref.outputs.tag }}

  build-web:
    name: build-web
    runs-on: macos-latest
    if: github.event_name == 'release' || github.event.inputs.platform == 'web'

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
      - uses: actions/checkout@v2.0.0
        with:
          ref: ${{ steps.git_ref.outputs.ref }}
      - name: Run build script
        run: |
          cd build/web && printf "y" | ./build.sh release
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "out/*.tgz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.git_ref.outputs.tag }}

  build-android:
    name: build-android
    runs-on: macos-latest
    if: github.event_name == 'release' || github.event.inputs.platform == 'android'

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
      - uses: actions/checkout@v2.0.0
        with:
          ref: ${{ steps.git_ref.outputs.ref }}
      - name: Run build script
        run: |
          cd build/android && printf "y" | ./build.sh release
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "out/*.aar;out/*.apk"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.git_ref.outputs.tag }}

  build-ios:
    name: build-ios
    runs-on: macos-latest
    if: github.event_name == 'release' || github.event.inputs.platform == 'ios'

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
      - uses: actions/checkout@v3.0.0
      - name: Run build script
        run: |
          cd build/ios && printf "y" | ./build.sh release
        env:
          TAG: ${{ steps.git_ref.outputs.tag }}
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "out/ios-release/filament/lib/universal/*.xcframework.zip;out/*.tgz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.git_ref.outputs.tag }}
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Updating Swift Package Version to: ${{ steps.git_ref.outputs.tag }} and updating hashes"
          add: "Package.swift"
          tag: "${{ steps.git_ref.outputs.tag }} --force"
          tag_push: "--force"
          push: origin HEAD:${{ github.ref_name }}

  build-windows:
    name: build-windows
    runs-on: windows-2019
    if: github.event_name == 'release' || github.event.inputs.platform == 'windows'

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
        shell: bash
      - uses: actions/checkout@v2.0.0
        with:
          ref: ${{ steps.git_ref.outputs.ref }}
      - name: Run build script
        run: |
          build\windows\build-github.bat release
        shell: cmd
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "out/*.tgz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.git_ref.outputs.tag }}
